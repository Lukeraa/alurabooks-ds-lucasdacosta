{"version":3,"file":"alurabooks-ds-lucasdacosta.cjs.production.min.js","sources":["../src/components/AbButton/index.tsx","../src/components/AbCard/index.tsx","../src/components/AbTag/index.tsx","../src/components/AbOptionGroup/index.tsx","../src/components/AbInput/index.tsx","../src/components/AbQuantityInput/index.tsx","../src/components/AbModal/index.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\n\r\nexport interface AbButtonProps {\r\n    text?: string\r\n    btnType?: 'primary' | 'secondary'\r\n    onClick?: () => void\r\n}\r\n\r\n\r\nconst StyledButton = styled.button<AbButtonProps>`\r\n    background: ${(props: AbButtonProps) => props.btnType === 'primary' ? '#EB9B00' : '#FFF'};\r\n    padding: 16px 32px;\r\n    border: 2px solid #EB9B00;\r\n    color: ${(props: AbButtonProps) => props.btnType === 'primary' ? '#FFF' : '#EB9B00'};\r\n    font-size: 20px;\r\n    font-family: Poppins sans-serif;\r\n    cursor: pointer;\r\n    ${(props: AbButtonProps) => props.btnType === 'primary' \r\n    \r\n        ? css`\r\n            &:hover {\r\n                border: 2px solid #B87900;\r\n                background: #B87900;\r\n            }\r\n        `\r\n        : css`\r\n            &:hover {\r\n                border: 2px solid #B87900;\r\n                background: #FFF;\r\n                color: #B87900;\r\n            }\r\n        `\r\n    }\r\n`\r\n    \r\nexport const AbButton= ({ text, btnType = 'primary', onClick } : AbButtonProps) => {\r\n\r\n    return (\r\n        <StyledButton onClick={onClick} btnType={btnType}>\r\n            {text}\r\n        </StyledButton>\r\n    )\r\n\r\n}\r\n","import React, { ReactNode } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\ninterface CardProps {\r\n    children: ReactNode,\r\n}\r\n\r\nconst StyledCard = styled.div`\r\n    background-color: #FFF;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    width: 551px;\r\n    padding: 48px 32px 48px 48px;\r\n    border-radius: 10px;\r\n    gap 16px;\r\n`\r\n\r\nexport const AbCard = ({ children }: CardProps) => {\r\n    return (\r\n        <StyledCard>\r\n            {children}\r\n        </StyledCard>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\nexport interface AbTagProps {\r\n    text: string,\r\n}\r\n\r\nconst StyledTag = styled.div`\r\n    background-color: #EB9B00;\r\n    color: #FFF;\r\n    padding: 24px 32px;\r\n    font-weight: 700;\r\n    display: inline-block;\r\n    font-family: sans-serif;\r\n`\r\n\r\nexport const AbTag = ({ text }: AbTagProps) => {\r\n    return (\r\n        <StyledTag>\r\n            <h1>{text}</h1>\r\n        </StyledTag>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledSection = styled.section<{ selected: boolean }>`\r\n    width: 194px;\r\n    height: 88px;\r\n    background: ${props => props.selected ? 'linear-gradient(97.54deg, #002F52 35.49%, #326589 165.37%)' : '#FFF'};\r\n    border: 1px solid;\r\n    border-color: ${props => props.selected ? '#002F52' : '#EB9B00'};\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n    margin: 10px;\r\n    font-family: sans-serif;\r\n    gap: 8px+;\r\n    cursor: pointer;\r\n    header {\r\n        color: ${props => props.selected ? '#FFF' : '#EB9B00'};\r\n    }\r\n    strong {\r\n        color: ${props => props.selected ? '#FFF' : '#EB9B00'};\r\n        font-weight: 700;\r\n        font-size: 16px;\r\n    }\r\n    footer {\r\n        color: ${props => props.selected ? '#FFF' : '#rgba(0, 0, 0, .54)'};\r\n    }\r\n    `\r\n\r\n\r\nexport interface AbOptionGroupBase {\r\n    id: number\r\n    title: string\r\n    body: string\r\n    footer: string\r\n}\r\n\r\nexport interface AbOptionGroupProps {\r\n    options: AbOptionGroupBase[]\r\n    defaultValue?: AbOptionGroupBase | null\r\n    onChange?: (option: AbOptionGroupBase) => void\r\n}\r\n\r\nexport const AbOptionGroup = ({ options, onChange, defaultValue } : AbOptionGroupProps) => {\r\n    const [select, setSelect] = useState<AbOptionGroupBase | null>(defaultValue ?? null)\r\n    const whenSelect = (option: AbOptionGroupBase): void => {\r\n        setSelect(option)\r\n        if (onChange) {\r\n            onChange(option)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {options.map(option => \r\n                //<StyledSection onClick={() => whenSelect(option)} key={option.id} selected={select.id == option.id}>\r\n                <StyledSection onClick={() => whenSelect(option)} key={option.id} selected={select == null ? select==false : select.id == option.id}>\r\n                    <header>\r\n                        {option.title}\r\n                    </header>\r\n                    <div>\r\n                        <strong>\r\n                            {option.body}\r\n                        </strong>\r\n                    </div>\r\n                    <footer>\r\n                        {option.footer}\r\n                    </footer>\r\n                </StyledSection>\r\n            )}\r\n        </>       \r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport interface AbInputProps {\r\n    label?: string;\r\n    placeholder?: string;\r\n    placeholderAlign?: 'left' | 'center' | 'right';\r\n    value: string;\r\n    type?: 'text' | 'email' | 'password' | 'date';\r\n    //onChange: (value: string) => void\r\n    darkmode?: boolean\r\n}\r\n\r\nconst StyledInput = styled.input<AbInputProps>`\r\n    background: ${(props) => props.darkmode ? 'transparent' : '#FFF'};\r\n    color: #A4A4A4;\r\n    width: 510px;\r\n    padding: 10px 24px;\r\n    border: 1px solid #002F52;\r\n    border-color: ${(props) => props.darkmode ? '#FFF' : '#002F52'};\r\n    border-radius: 24px;\r\n    text-align: ${(props) => props.placeholderAlign};\r\n    font-family: 'Poppins';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    &:focus{\r\n        outline: none;\r\n    }\r\n    ::placeholder,\r\n    ::-webkit-input-placeholder  {\r\n        color: ${(props) => props.darkmode ? '#FFF' : '#002F52'};\r\n    }\r\n    `\r\nconst StyledLabel = styled.label<{ darkmode: boolean }>`\r\n    color: ${(props) => props.darkmode ? '#FFF' : '#002F52'};\r\n    margin-left: 24px;\r\n    font-family: 'Poppins';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n`\r\n\r\nexport const AbInput = ({ label, placeholder = \"\", placeholderAlign = \"left\", value, type = \"text\", darkmode = false }: AbInputProps) => {\r\n    return (\r\n        <div>\r\n            {label && <StyledLabel darkmode={darkmode}>\r\n                {label}\r\n            </StyledLabel>}\r\n            <StyledInput\r\n                placeholder={placeholder}\r\n                placeholderAlign={placeholderAlign}\r\n                darkmode={darkmode}\r\n                type={type}\r\n                value={value}\r\n            />\r\n        </div>\r\n            \r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n    background: #002F52;\r\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\r\n    border: none;\r\n    cursor: pointer;\r\n    color: #FFF;\r\n    width: 28px;\r\n    height: 28px;\r\n    border-radius: 50%;\r\n`\r\nconst StyledSpan = styled.span`\r\n    font-size: 18px;\r\n    line-height: 27px;\r\n    display: inline-block;\r\n    margin: 0 12px;\r\n    color: #002F52;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`\r\n\r\nconst StyledFlexContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst StyledContainer = styled.div`\r\n    width: 100px;\r\n    text-align: center;\r\n    display: inline-block;\r\n`\r\n\r\nconst StyledLabel = styled.label`\r\n    color: #002F52;\r\n    display: block;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    margin-bottom: 8px;\r\n`\r\n\r\nexport interface AbQuantityInputProps {\r\n    onChange?: (value:number) => void\r\n}\r\n\r\nexport const AbQuantityInput = ({ onChange } : AbQuantityInputProps) => {\r\n    const [value, setValue] = useState(1)\r\n\r\n    useEffect(() => {\r\n        if (onChange) {            \r\n            onChange(Number(value))\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledLabel>Quantidade</StyledLabel>\r\n            <StyledFlexContainer>\r\n                <StyledButton onClick={() => setValue(prev => prev - 1)}>\r\n                    -\r\n                </StyledButton>\r\n                <StyledSpan>\r\n                    {value}\r\n                </StyledSpan>\r\n                <StyledButton onClick={() => setValue(prev => prev + 1)}>\r\n                    +\r\n                </StyledButton>\r\n            </StyledFlexContainer>\r\n        </StyledContainer>\r\n    )\r\n}","import React, { ReactNode } from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nexport interface AbModalProps {\r\n    children: ReactNode,\r\n    titulo: string,\r\n    aberta: boolean,\r\n    aoFechar: () => void\r\n}\r\n\r\nconst JanelaModal = styled.div`\r\n    position: fixed;\r\n    padding: 64px;\r\n    background: #FFFFFF;\r\n    box-shadow: 4px 4px 24px -4px rgba(0, 0, 0, 0.15);\r\n    border-radius: 24px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`\r\nconst FundoModal = styled.div`\r\n    position: fixed;\r\n    left: 0px;\r\n    right: 0px;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    background: rgba(101, 101, 101, 0.85);\r\n`\r\n\r\nconst TituloModalWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-family: sans-serif;\r\n    align-items: center;\r\n`\r\nconst TituloModal = styled.h2`\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    line-height: 48px;\r\n    color: #EB9B00;\r\n    margin: 0;\r\n`\r\nconst BotaoFecharModal = styled.button`\r\n    background: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: #002F52;\r\n`\r\n\r\nexport const AbModal = ({ children, aberta, aoFechar, titulo }: AbModalProps) => {\r\n    if (!aberta) {\r\n        return <></>\r\n    }\r\n    return (\r\n        <>\r\n            <FundoModal onClick={aoFechar} />\r\n            <JanelaModal>\r\n                <TituloModalWrapper>\r\n                    <TituloModal>{titulo}</TituloModal>\r\n                    <BotaoFecharModal onClick={aoFechar}>X</BotaoFecharModal>\r\n                </TituloModalWrapper>\r\n                {children}\r\n            </JanelaModal>\r\n        </>\r\n    )\r\n}","import React, { FC, HTMLAttributes, ReactChild } from 'react';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n  /** custom content, defaults to 'the snozzberries taste like snozzberries' */\n  children?: ReactChild;\n}\n\n// Please do not use types off of a default export module or else Storybook Docs will suffer.\n// see: https://github.com/storybookjs/storybook/issues/9556\n/**\n * A custom Thing component. Neat!\n */\nexport const Thing: FC<Props> = ({ children }) => {\n  return <div>{children || `the snozzberries taste like snozzberries`}</div>;\n};\n\nexport * from './components/AbButton'\nexport * from './components/AbCard'\nexport * from './components/AbTag'\nexport * from './components/AbOptionGroup'\nexport * from './components/AbInput'\nexport * from './components/AbQuantityInput'\nexport * from './components/AbModal'\n"],"names":["StyledButton","styled","button","props","btnType","css","StyledCard","div","StyledTag","StyledSection","section","selected","StyledInput","input","darkmode","placeholderAlign","StyledLabel","label","StyledSpan","span","StyledFlexContainer","StyledContainer","JanelaModal","FundoModal","TituloModalWrapper","TituloModal","h2","BotaoFecharModal","AbButton","text","onClick","React","AbCard","children","AbInput","placeholder","value","type","AbModal","aberta","aoFechar","titulo","AbOptionGroup","options","onChange","defaultValue","select","setSelect","useState","map","option","whenSelect","key","id","title","body","footer","AbQuantityInput","setValue","useEffect","Number","prev","AbTag","Thing"],"mappings":"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"}